name: addie_ci

env: {}

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [next, qa, main]

jobs:

  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          mamba-version: "*"
          python-version: ${{ matrix.python-version }}
          channels: neutrons,conda-forge,mantid/label/nightly,neutrons

      - name: Apt install deps
        run: |
          sudo apt update
          sudo apt-get install xvfb freeglut3-dev libglu1-mesa

      - name: Conda install deps
        shell: bash -l {0}
        run: mamba install mantidworkbench mantid-total-scattering-python-wrapper --file requirements.txt --file requirements-dev.txt

      - name: Mantid pre-requisites
        shell: bash -l {0}
        run: |
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16
          mkdir ~/.mantid
          echo "CheckMantidVersion.OnStartup=0" > ~/.mantid/Mantid.user.properties
          echo "UpdateInstrumentDefinitions.OnStartup=0" >> ~/.mantid/Mantid.user.properties
          echo "usagereports.enabled=0" >> ~/.mantid/Mantid.user.properties
          export DISPLAY=:99.0
          sleep 3

      - name: Lint
        shell: bash -l {0}
        run: flake8 . --count

      - name: Test
        shell: bash -l {0}
        run: |
          python -c "import mantid"
          python -c "import qtpy"
          python -c "import mantidqt"
          xvfb-run --server-args="-screen 0 640x480x24" --auto-servernum mantidworkbench --help
          echo "import time;time.sleep(5)" > workbenchshutdown.py
          xvfb-run --auto-servernum pytest --mpl tests

      - name: Build conda libraray
        shell: bash -l {0}
        run: |
          conda install -y anaconda-client conda-build conda-verify
          cd conda.recipe
          conda build --output-folder . . -c neutrons -c mantid/label/nightly

      - name: Deploy to Anaconda
        shell: bash -l {0}
        if: startsWith( github.ref, 'refs/tags/v')
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          anaconda upload --label main linux-64/addie-*.tar.bz2
